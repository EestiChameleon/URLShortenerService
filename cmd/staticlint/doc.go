/*
Staticlint - multichecker для проверки кода нужными анализаторами.
Позволяет собрать в группу набор нужных анализаторов.

На данный момент включает в себя набор из:
	1) стандартных статических анализаторов пакета golang.org/x/tools/go/analysis/passes;
	2) всех анализаторов класса SA пакета staticcheck.io;
	3) не менее одного анализатора остальных классов пакета staticcheck.io;
	4) двух или более любых публичных анализаторов на ваш выбор;
	5) анализатор ExitCheckAnalyzer, запрещающий использовать прямой вызов os.Exit в функции main пакета main.

Использование:
	mycheck [-flag] [package]

The flags are:
	-d
		Don't know.
	-e
		Explain please.
	-h
		How to call this multicheck.


Описание используемых анализаторов:
	1) Стандартные статические анализаторы пакета golang.org/x/tools/go/analysis/passes
		printf
			Анализатор printf проверяет на соответствие спецификаторы шаблона и типы аргументов.
			Когда шаблон содержит много спецификаторов, легко ошибиться в соответствующих аргументах.
		shadow
			Для поиска затенённых (shadowed) переменных.
			Предупреждает разработчика, что переменная внутри условного оператора затеняет уже существующую переменную с таким же именем.
		structtag
			Анализатор structtag проверяет теги полей структур на соответствие reflect.StructTag.Get.
			Ошибка в написании тега может приводить к неверному выполнению программы.

	2) Все анализаторы класса SA пакета staticcheck.io
		Содержит все проверки, связанные с корректностью написания кода.
	3) Один анализатор из остальных классов пакета staticcheck.io
		S1005 - Drop unnecessary use of the blank identifier.
	4) Два публичных анализатора
		Первый.
		Второй.
	5) Анализатор ExitCheckAnalyzer, запрещающий использовать прямой вызов os.Exit в функции main пакета main.
		Реализация представлена в файле my_exit_analyzer.go.
*/
package main
